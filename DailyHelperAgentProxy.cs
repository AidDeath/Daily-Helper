//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DailyHelperAgentLib
{
    using System.Runtime.Serialization;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ProcessState", Namespace = "http://schemas.datacontract.org/2004/07/DailyHelperAgentLib")]
    public partial class ProcessState : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private bool IsFoundField;

        private bool IsRespondingField;

        private string NameField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFound
        {
            get
            {
                return this.IsFoundField;
            }
            set
            {
                this.IsFoundField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsResponding
        {
            get
            {
                return this.IsRespondingField;
            }
            set
            {
                this.IsRespondingField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IProcessService")]
public interface IProcessService
{

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IProcessService/GetProcessList", ReplyAction = "http://tempuri.org/IProcessService/GetProcessListResponse")]
    string[] GetProcessList();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IProcessService/GetProcessList", ReplyAction = "http://tempuri.org/IProcessService/GetProcessListResponse")]
    System.Threading.Tasks.Task<string[]> GetProcessListAsync();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IProcessService/GetProcessState", ReplyAction = "http://tempuri.org/IProcessService/GetProcessStateResponse")]
    DailyHelperAgentLib.ProcessState GetProcessState(string processName);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IProcessService/GetProcessState", ReplyAction = "http://tempuri.org/IProcessService/GetProcessStateResponse")]
    System.Threading.Tasks.Task<DailyHelperAgentLib.ProcessState> GetProcessStateAsync(string processName);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IProcessServiceChannel : IProcessService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ProcessServiceClient : System.ServiceModel.ClientBase<IProcessService>, IProcessService
{

    public ProcessServiceClient()
    {
    }

    public ProcessServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
    {
    }

    public ProcessServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public ProcessServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public ProcessServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    public string[] GetProcessList()
    {
        return base.Channel.GetProcessList();
    }

    public System.Threading.Tasks.Task<string[]> GetProcessListAsync()
    {
        return base.Channel.GetProcessListAsync();
    }

    public DailyHelperAgentLib.ProcessState GetProcessState(string processName)
    {
        return base.Channel.GetProcessState(processName);
    }

    public System.Threading.Tasks.Task<DailyHelperAgentLib.ProcessState> GetProcessStateAsync(string processName)
    {
        return base.Channel.GetProcessStateAsync(processName);
    }
}
