<Window x:Class="Daily_Helper.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="{Binding Title}" d:Height="450" d:Width="800"
        xmlns:conv="clr-namespace:Daily_Helper.Helpers.Converters"
        xmlns:vml="clr-namespace:Daily_Helper.ViewModels"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        vml:ViewModelLocator.AutoWireViewModel="True"
        d:DataContext ="{d:DesignInstance {x:Type vml:MainViewModel}}" WindowStartupLocation="CenterScreen" 
        Width="{Binding WindowWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Height="{Binding WindowHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
    <Window.Resources>
        <conv:BooleanToColorConverter x:Key="BooleanToColorConverter"/>
        <conv:BooleanToPackIconConverter x:Key="BooleanToPackIconConverter"/>
        <conv:DateTimeToSpanStringConverter x:Key="DateTimeToSpanStringConverter"/>
        <conv:SizeToVisibilityConverter x:Key="SizeToVisibilityConverter"/>

        <Style TargetType="{x:Type TextBlock}" x:Key="WrapText">
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <materialDesign:DialogHost Grid.RowSpan="3" CloseOnClickAway="True" Identifier="MaterialSettingsDialogHost" Panel.ZIndex="1"/>
        <materialDesign:DialogHost Grid.RowSpan="3" CloseOnClickAway="True" Identifier="AddRoutinesDialogHost" Panel.ZIndex="1"/>
        <materialDesign:DialogHost Grid.RowSpan="3" CloseOnClickAway="True" Identifier="LoadFromFileOptionsDialogHost" Panel.ZIndex="1"/>
        <Menu Grid.Row="0" Style="{StaticResource MaterialDesignMenu}">
            <!-- Пункт меню "Задачи" -->
            <MenuItem Header="Задачи" Style="{StaticResource MaterialDesignMenuItem}">
                <MenuItem.Icon>
                    <materialDesign:PackIcon Kind="CheckboxMarkedOutline" />
                </MenuItem.Icon>
                <!-- Подпункты -->
                <MenuItem Header="Добавить проверку" Command="{Binding ShowAddRoutineWindowCommand}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="PlusBoxOutline" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Включить все" Command="{Binding EnableAllRoutinesCommand}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="ToggleSwitch" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Выключить все" Command="{Binding DisableAllRoutinesCommand}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="ToggleSwitchOff" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Настройки" Command="{Binding ShowSettingsWindowCommand}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="CogOutline" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Экспорт набора задач" Command="{Binding ExportRoutinesCommand}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Export" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Импорт набора задач" Command="{Binding ImportRoutinesCommand}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Import" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Удалить все задачи" Command="{Binding DeleteAllRoutines}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="DeleteOutline" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <!-- Пункт меню "Вид" -->
            <MenuItem Header="Вид" Style="{StaticResource MaterialDesignMenuItem}">
                <MenuItem.Icon>
                    <materialDesign:PackIcon Kind="ViewGridOutline" />
                </MenuItem.Icon>
                <!-- Подпункты -->
                <MenuItem Header="Изменить вид" Command="{Binding ChangeViewCommand}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="ViewDashboard" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Запомнить этот размер окна" Command="{Binding RememberWindowSizeCommand}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="ContentSave" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>


        <DataGrid Visibility="{Binding IsTileView, Converter={StaticResource InverseBoolToVisConverter}}" Style="{StaticResource MaterialDesignDataGrid}" Grid.Row="1" ItemsSource="{Binding Routines}" AutoGenerateColumns="False" ColumnWidth="*" CanUserAddRows="False" SelectionUnit="CellOrRowHeader">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="Background" Value="{Binding Success, Converter={StaticResource BooleanToColorConverter}}" />
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridCheckBoxColumn Header="Вкл." Binding="{Binding IsActivated, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto" />
                <DataGridTextColumn Header="Задача" Binding="{Binding Description}" Width="2*" IsReadOnly="True" ElementStyle="{StaticResource WrapText}" />
                <DataGridTextColumn Header="Результат" Binding="{Binding Result}" Width="2*" IsReadOnly="True" ElementStyle="{StaticResource WrapText}" />
                <DataGridTextColumn Header="Проверено" Binding="{Binding LastExecutted, Converter={StaticResource DateTimeToSpanStringConverter}, ConverterParameter={x:Static conv:SpanTextType.Exact}}" IsReadOnly="True" Width="130" CanUserResize="False" />
                <DataGridTemplateColumn Header="Удалить">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource MaterialDesignFlatButton}" ToolTip="Отключить и удалить эту задачу" Command="{Binding Path=DataContext.RemoveRoutineCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}">
                                <materialDesign:PackIcon Kind="DeleteOutline" />
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        
        <!--Вариант от DeepSeek-->

        <!--<ItemsControl Grid.Row="1" ItemsSource="{Binding Routines}" Visibility="{Binding IsTileView, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="3" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <materialDesign:Card UniformCornerRadius="10" Background="{Binding Success, Converter={StaticResource BooleanToColorConverter}}" ToolTip="{Binding Result}" Margin="2">
                        <StackPanel>
                            <materialDesign:PackIcon Kind="{Binding Success, Converter={StaticResource BooleanToPackIconConverter}}" Width="24" Height="24" HorizontalAlignment="Center" />
                            <TextBlock Text="{Binding Description}" TextWrapping="Wrap" Style="{StaticResource MaterialDesignBody2TextBlock}" />
                            <TextBlock Text="{Binding LastExecutted, Converter={StaticResource DateTimeToSpanStringConverter}}" Style="{StaticResource MaterialDesignCaptionTextBlock}" />
                        </StackPanel>
                    </materialDesign:Card>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>-->

        <ItemsControl Grid.Row="1" ItemsSource="{Binding Routines}" Visibility="{Binding IsTileView, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="3" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <materialDesign:Card UniformCornerRadius="10" Background="{Binding Success, Converter={StaticResource BooleanToColorConverter}}" ToolTip="{Binding Result}" Margin="2">
                        <Grid>
                            <!-- Основной контент карточки -->
                            <TextBlock Text="{Binding Description}" TextWrapping="Wrap" Style="{StaticResource MaterialDesignBody2TextBlock}" Margin="5" />

                            <!-- Иконка в нижнем правом углу -->
                            <materialDesign:PackIcon 
                        Kind="{Binding Success, Converter={StaticResource BooleanToPackIconConverter}}" 
                        Width="24" 
                        Height="24" 
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Bottom" 
                        Margin="5"
                        Visibility="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualWidth, Converter={StaticResource SizeToVisibilityConverter}, ConverterParameter=150}" />

                            <!-- LastExecutted в нижнем левом углу -->
                            <TextBlock 
                        Text="{Binding LastExecutted, Converter={StaticResource DateTimeToSpanStringConverter}}" 
                        Style="{StaticResource MaterialDesignCaptionTextBlock}" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Bottom" 
                        Margin="5"
                        Visibility="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualHeight, ConverterParameter=70, Converter={StaticResource SizeToVisibilityConverter}}" />
                        </Grid>
                    </materialDesign:Card>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>


    </Grid>
</Window>
