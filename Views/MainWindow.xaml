<Window x:Class="Daily_Helper.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="{Binding Title}" d:Height="450" d:Width="800"
        xmlns:conv="clr-namespace:Daily_Helper.Helpers.Converters"
        xmlns:vml="clr-namespace:Daily_Helper.ViewModels"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        vml:ViewModelLocator.AutoWireViewModel="True"
        d:DataContext ="{d:DesignInstance {x:Type vml:MainViewModel}}" WindowStartupLocation="CenterScreen" 
        Width="{Binding WindowWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Height="{Binding WindowHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
    <Window.Resources>
        <conv:BooleanToColorConverter x:Key="BooleanToColorConverter"/>
        <conv:DateTimeToSpanStringConverter x:Key="DateTimeToSpanStringConverter"/>

        <Style TargetType="{x:Type TextBlock}" x:Key="WrapText">
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <materialDesign:DialogHost Grid.RowSpan="3" CloseOnClickAway="True" Identifier="MaterialSettingsDialogHost" Panel.ZIndex="1"/>
        <materialDesign:DialogHost Grid.RowSpan="3" CloseOnClickAway="True" Identifier="AddRoutinesDialogHost" Panel.ZIndex="1"/>
        <materialDesign:DialogHost Grid.RowSpan="3" CloseOnClickAway="True" Identifier="LoadFromFileOptionsDialogHost" Panel.ZIndex="1"/>
        <materialDesign:DialogHost Grid.RowSpan="3" CloseOnClickAway="True" Identifier="EventsListDialogHost" Panel.ZIndex="1"/>
        <materialDesign:DialogHost Grid.RowSpan="3" CloseOnClickAway="False" Identifier="MailBookDialogHost" Panel.ZIndex="1"/>
        <materialDesign:DialogHost Grid.RowSpan="3" CloseOnClickAway="False" Identifier="MailReceiversDialogHost" Panel.ZIndex="1"/>
        <Menu Grid.Row="0">
            <MenuItem Header="Задачи">
                <MenuItem.Items>
                    <MenuItem Header="Добавить проверку" Command="{Binding ShowAddRoutineWindowCommand}"/>
                    <MenuItem Header="Включить все" Command="{Binding EnableAllRoutinesCommand}"/>
                    <MenuItem Header="Выключить все" Command="{Binding DisableAllRoutinesCommand}"/>
                    <MenuItem Header="Настройки" Command="{Binding ShowSettingsWindowCommand}"/>
                    <MenuItem Header="Экспорт набора задач" Command="{Binding ExportRoutinesCommand}"/>
                    <MenuItem Header="Импорт набора задач" Command="{Binding ImportRoutinesCommand}"/>
                    <MenuItem Header="Удалить все задачи" Command="{Binding DeleteAllRoutines}"/>
                </MenuItem.Items>
            </MenuItem>
            <MenuItem Header="Вид" >
                <MenuItem.Items>
                    <MenuItem Header="Изменить вид" Command="{Binding ChangeViewCommand}"/>
                    <MenuItem Header="Запомнить этот размер окна" Command="{Binding RememberWindowSizeCommand}"/>
                    <!--<MenuItem Header="Write to db" Command="{Binding WriteToDbCommand}"/>
                    <MenuItem Header="Read from db" Command="{Binding ReadFromDbCommand}"/>-->
                </MenuItem.Items>
            </MenuItem>
            <MenuItem Header="Протоколы">
                <MenuItem.Items>
                    <MenuItem Header="События отказов" Command="{Binding ShowEventsList}"/>
                    <MenuItem Header="Справочник получателей" Command="{Binding ShowMailBookCommand}"/>
                    <MenuItem Header="Назначение уведомлений" Command="{Binding ShowMailRecieversCommand}"/>
                </MenuItem.Items>
            </MenuItem>
        </Menu>


        <DataGrid Visibility="{Binding IsTileView, Converter={StaticResource InverseBoolToVisConverter}}" Grid.Row="1" ItemsSource="{Binding Routines}" AutoGenerateColumns="False" ColumnWidth="*" CanUserAddRows="False" SelectionUnit="CellOrRowHeader">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Background" Value="Gray"/>
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="Background" Value="{Binding Success, Converter={StaticResource BooleanToColorConverter}}"/>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridCheckBoxColumn Header="Вкл." Binding="{Binding IsActivated, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto"/>
                <DataGridTextColumn Header="Задача" Binding="{Binding Description}" Width="2*" IsReadOnly="True" ElementStyle="{StaticResource WrapText}"/>
                <DataGridTextColumn Header="Результат" Binding="{Binding Result}" Width="2*" IsReadOnly="True" ElementStyle="{StaticResource WrapText}"/>
                <DataGridTextColumn Header="Проверено" 
                                    Binding="{Binding LastExecutted, Converter={StaticResource DateTimeToSpanStringConverter}, ConverterParameter={x:Static conv:SpanTextType.Exact}}"
                                    IsReadOnly="True" Width="130" CanUserResize="False"/>
                <!--<DataGridTextColumn Header="Успешно" Binding="{Binding LastSucceeded, Converter={StaticResource DateTimeToSpanStringConverter}}" IsReadOnly="True" Width="130" CanUserResize="False"/>-->
                <DataGridTemplateColumn Header="Удалить">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button
                                ToolTip="Отключить и удалить эту задачу"
                                Content="Удалить" 
                                Command="{Binding Path=DataContext.RemoveRoutineCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>

        <ListBox Visibility="{Binding IsTileView, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Row="1" ItemsSource="{Binding Routines}">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Background" Value="{Binding Success, Converter={StaticResource BooleanToColorConverter}}"/>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <materialDesign:Card Background="{Binding Success, Converter={StaticResource BooleanToColorConverter}}" ToolTip="{Binding Result}" UniformCornerRadius="10">
                        <TextBlock
                            Grid.Row="2"
                            Margin="16 0 16 8"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            Style="{StaticResource MaterialDesignBody2TextBlock}"
                            Text="{Binding Description}"
                            TextWrapping="Wrap"/>
                    </materialDesign:Card>
                </DataTemplate>

            </ListBox.ItemTemplate>
        </ListBox>
        
    </Grid>
</Window>
